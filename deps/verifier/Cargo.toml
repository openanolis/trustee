 [package]
name = "verifier"
version = "0.1.0"
edition = "2021"

[features]
default = [ "all-verifier" ]
all-verifier = [ 
    "tdx-verifier",
    "sgx-verifier",
    "snp-verifier",
    "csv-verifier",
    "hygon-dcu-verifier",
    "system-verifier",
    "tpm-verifier" 
]
tdx-verifier = [
    "scroll",
    "intel-tee-quote-verification-rs",
    "gpu-verifier",
    "eventlog",
]
sgx-verifier = ["scroll", "intel-tee-quote-verification-rs"]
az-snp-vtpm-verifier = ["az-snp-vtpm", "sev", "snp-verifier"]
az-tdx-vtpm-verifier = ["az-tdx-vtpm", "openssl", "tdx-verifier"]
snp-verifier = ["asn1-rs", "openssl", "sev", "x509-parser"]
csv-verifier = ["codicon", "csv-rs", "eventlog", "openssl", "tokio/fs"]
hygon-dcu-verifier = ["csv-rs"]
# cca-verifier = ["ear", "jsonwebtoken", "veraison-apiclient", "ccatoken"]
se-verifier = [ "openssl", "pv", "serde_with", "tokio/sync" ]
system-verifier = []
tpm-verifier = ["openssl", "tss-esapi"]
gpu-verifier = ["reqwest", "quick-xml", "uuid", "chrono", "regex", "futures", "tokio/sync"]

[dependencies]
anyhow.workspace = true
thiserror.workspace = true
asn1-rs = { version = "0.5.1", optional = true }
async-trait.workspace = true
az-snp-vtpm = { version = "0.5.3", default-features = false, features = ["verifier"], optional = true }
az-tdx-vtpm = { version = "0.5.3", default-features = false, features = ["verifier"], optional = true }
base64 = "0.21"
bincode = "1.3.3"
byteorder = "1"
cfg-if = "1.0.0"
chrono = { version = "0.4", features = ["serde"], optional = true }
codicon = { version = "3.0", optional = true }
# TODO: change it to "0.1", once released.
csv-rs = { git = "https://github.com/openanolis/csv-rs", rev = "b67a07e", optional = true, default-features = false, features = [
    "network",
] }
eventlog = { path = "../eventlog", optional = true }
eventlog-rs = { version = "0.1.7" }
futures = { version = "0.3", optional = true }
hex.workspace = true
jsonwebkey = "0.3.5"
jsonwebtoken = { workspace = true, default-features = false, optional = true }
kbs-types.workspace = true
log.workspace = true
openssl = { version = "0.10.55", optional = true }
pv = { version = "0.10.0", package = "s390_pv", optional = true }
quick-xml = { version = "0.36", optional = true }
reqwest = { workspace = true, features = ["json"], optional = true }
regex = { version = "1.10", optional = true }
scroll = { version = "0.11.0", default-features = false, features = ["derive"], optional = true }
serde.workspace = true
serde_json.workspace = true
serde_with = { workspace = true, optional = true }
sev = { version = "4.0.0", features = ["openssl", "snp"], optional = true }
sha1 = "0.10.6"
sha2.workspace = true 
tokio = { workspace = true, optional = true, default-features = false }
intel-tee-quote-verification-rs = { git = "https://github.com/intel/SGXDataCenterAttestationPrimitives", tag = "DCAP_1.21", optional = true }
strum.workspace = true
tss-esapi = { version = "7.4.0", optional = true }
uuid = { version = "1.0", features = ["v4"], optional = true }
veraison-apiclient = { git = "https://github.com/veraison/rust-apiclient", rev = "fe149cd", optional = true }
# ccatoken = { git = "https://github.com/veraison/rust-ccatoken", rev = "dfe9ca2", optional = true }
ear = { version = "0.3.0", optional = true }
x509-parser = { version = "0.14.0", optional = true }
bitflags = { version = "2.8.0", features = ["serde"] }

[build-dependencies]
shadow-rs.workspace = true
tonic-build.workspace = true

[dev-dependencies]
assert-json-diff.workspace = true
rstest.workspace = true
serial_test.workspace = true
tokio.workspace = true
